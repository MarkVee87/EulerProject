package EvenFibonacciNumbers;

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

import java.util.ArrayList;
import java.util.List;

public class main {

    public static void main(String[] args) {

        List<Integer> fibonacciEvenValsSum = new ArrayList<>();
        int limit = 10, n1 = 0, n2 = 1, n3, finalValue;

        System.out.println(n1 + "\n" + n2);

        for (int i = 0; i < limit; i++) {
            n3 = n1 + n2;
            System.out.println(n3);
            fibonacciEvenValsSum.add(n3);
            n1 = n2;
            n2 = n3;
        }

        finalValue = fibonacciEvenValsSum.stream().mapToInt(i -> i).sum();
        System.out.println(finalValue);
    }
}
